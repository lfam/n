#! /bin/sh

# this variable contains the path to your notes
notepath=$HOME/notes/

# these variables provide usage and documentation for n
hint="Try 'n --help' for more information"
help="n, for easily working with a set of text files\n
Usage:
	n
	n -w <file [optional]>
	n <file [optional]> -w
	n <search string>
	n <search string [optional]> -n
	n -n <search string [optional]>

Modes:
	These options can go before or after the filename argument
	-n Open optionally named note in $EDITOR. Create it if it doesn't exist.
	-w Print path to note

n[ENTER]
List all notes

n foo[ENTER]
Show all notes containing foo*

n foo -n[ENTER]
Open foo in your shell's default text editor. If foo does not exist, it is created.

n -w [optional search string][ENTER]
Show path to search string. If search string is empty, print path to note directory.
"

# running with no argument returns a list of of all notes
if [ -z "$1" ]
then
	ls -t $notepath | sed s'/.txt$//'
	printf "\n$hint"

# if option -h, -help, or --help is set, print help file
elif [ "$1" = "-h" ] || [ "$1" = "-help" ] || [ "$1" = "--help" ]
then
	printf "$help"

# if option -w is set, print notes directory
#elif [ "$1" = "-w" ]
#then
#	echo $notepath

# option -w? print path
elif [ "$1" = "-w" ] || [ "$2" = "-w" ] 
then
	if [ -z "$2" ]
	then
		printf "$notepath\n"
	elif [ "$1" = "-w" ]
	then
		[ -e "$notepath$2".txt ] && printf "$notepath$2.txt\n" || printf "No "$2" in "$notepath"\n"
	elif [ "$2" = "-w" ]
	then
		[ -e "$notepath$1".txt ] && printf "$notepath$1.txt\n" || printf "No "$1" in "$notepath"\n"
	fi

# if option -n is set, open $1 in nano
elif [ "$2" = "-n" ]
then
	nano $notepath"$1".txt

# running with an argument returns a list of notes whose filenames contain
# that argument
else
	{ find -L $notepath -iname "*$1*" | sed 's!.*/!!' | sed 's/.txt/\ /' ; 
	grep -E -iRso ".{0,15}$1.{0,15}" $notepath | sed 's!.*/!!'  | \
	sed 's/.txt:/\ :\ /' ; } | sed '1!G;h;$!d'
fi
