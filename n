#! /bin/sh

# this variable contains the path to your notes
notepath=$HOME/notes/
# this variable contains the path to the active copy of n, for use in $help
npath=$(which n)

# these variables provide usage and documentation for n
hint="Try 'n --help' for more information"
help="\nn, for easily working with a set of text files\n
Usage:
	n				# print list of all notes
	n -w <file [optional]>		# print path to notes or specific note
	n <file [optional]> -w		# same as previous
	n <search string>		# search within notes for string
	n <note title> -n		# open note in nano text editor
	n -n <note title>		# same as previous
	n -h OR -help OR --help		# print this help page
You can change your notes directory by editing "'$notepath'" in $npath

"
# running with no argument returns a list of of all notes
if [ -z "$1" ]
then
	ls -t $notepath | sed s'/.txt$//'
	printf "\n$hint\n"

# if option -h, -help, or --help is set, print help file
elif [ "$1" = "-h" ] || [ "$1" = "-help" ] || [ "$1" = "--help" ]
then
	printf "$help"

# if option -w is set, print path to argument
elif [ "$1" = "-w" ] || [ "$2" = "-w" ] 
then
	if [ -z "$2" ]
	then
		printf "$notepath\n"
	elif [ "$1" = "-w" ]
	then
		[ -e "$notepath$2".txt ] && printf "$notepath$2.txt\n" || printf "No "$2" in "$notepath"\n"
	elif [ "$2" = "-w" ]
	then
		[ -e "$notepath$1".txt ] && printf "$notepath$1.txt\n" || printf "No "$1" in "$notepath"\n"
	fi

# if option -n is set, open $1 in nano
elif [ "$2" = "-n" ]
then
	nano $notepath"$1".txt

# running with an argument returns a list of notes whose filenames contain
# that argument
else
	{ find -L $notepath -iname "*$1*" | sed 's!.*/!!' | sed 's/.txt/\ /' ; 
	grep -E -iRso ".{0,15}$1.{0,15}" $notepath | sed 's!.*/!!'  | \
	sed 's/.txt:/\ :\ /' ; } | sed '1!G;h;$!d'
fi
