#!/bin/sh

# this variable contains the path to your notes
notes=~/notes/

# this variable contains an optional suffix to remove from filenames
suffix=".txt"

# error message for for when you can't write to $notes
path_error="You're trying to edit a file in $notes but that directory doesn't exist or you don't have write permission. Try $(basename $0) --help for more information."

# these variables provide usage info and documentation for the script.
hint="Try '$(basename $0) --help' for more information"
help="$(basename $0), for carefree note taking and reading

You can change your notes directory by editing "\$notes" in $(which $0)
You can choose a file suffix to hide by editing "\$suffix" in $(which $0)

Usage:	$(basename $0)				# print list of all notes
	$(basename $0) <optional note> -w		# print path to notes or specific note
	$(basename $0) <search string>		# if string is a note, open in editor
					# if not, search notes for string
	$(basename $0) <note> -n			# open note in text editor
	$(basename $0) -h OR -help OR --help		# print this help page
	Modes -n and -w can be placed before or after a note title.

Report any bugs to <lfamular@gmail.com>
"

edit_note() {
	if [ -w "$notes" ]; then
		${EDITOR:-vi} "$notes$1$suffix"
	else
		printf "$path_error\n"
	fi
}

ls_notes() {
	ls -t $notes | sed "s!$suffix!!" | sed '1!G;h;$!d'
	# the second sed reverses the order of lines, so that new files are 
	# near the command line
	printf "\n$hint\n"
}

search_notes() {
	{ find -L $notes -iname "*$1*" | sed "s!$notes!!" | sed 's!'$suffix'$!!' ;
	grep -is -E ".$1." $notes/* \
	| sed "s!$notes/!!" \
	| sed "s!$suffix:!\ :\ !" ; } \
	| sed '1!G;h;$!d' \
	| nl -n ln -s' ' -w2
}

which_notes() {
	if [ -z "$1" ]; then
		[ -d "$notes" ] && printf "$notes\n" \
		|| printf "Your notes are supposed to be in $notes but that directory does not exist. Try creating it or try n --help for more information.\n"
	else
		[ -e "$notes$1$suffix" ] && printf "$notes$1$suffix\n" \
		|| printf "No "$1$suffix" in "$notes"\n"
	fi
}

main() {
	if [ -z $1 ]; then
		ls_notes
		exit
	fi

	while [ $# -gt 0 ]; do
		case "$1" in
		"-w" )
			wflag=1
			shift
			continue
			;;
		"-n" )
			nflag=1
			shift
			continue
			;;
		--help | -help | -h )
			hflag=1
			shift
			continue
			;;
		* )
			str="$1"
			shift
			continue
			;;
		esac
	done

	test ${nflag:-0} -eq 1 && edit_note "$str"
	test ${wflag:-0} -eq 1 && which_notes "$str"
	test ${hflag:-0} -eq 1 && printf "$help"
	test -z ${nflag} && [ -z ${hflag} ] && [ -z ${wflag} ] \
		&& search_notes $str
}
main "$@"
