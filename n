#! /bin/sh

# this variable contains the path to your notes
notepath=$HOME/notes/

# this variable contains an optional suffix to remove from filenames
suffix=".txt"

# these variables provide usage info and documentation for n
hint="Try 'n --help' for more information"
help="n, for carefree note taking and reading

You can change your notes directory by editing "'$notepath'" in $(which n)

Usage:	n				# print list of all notes
	n <optional note> -w		# print path to notes or specific note
	n <search string>		# search your notes for string
	n <note> -n			# open note in nano text editor
	n -h OR -help OR --help		# print this help page
	Modes -n and -w can be placed before or after a note title.

Report any bugs to <lfamular@gmail.com>
"
# running with no argument returns a list of of all notes
if [ -z "$1" ]
then
	ls -t $notepath | sed "s!$suffix!!" | sed '1!G;h;$!d'
	printf "\n$hint\n"

# if option -h, -help, or --help is set, print help file
elif [ "$1" = "-h" ] || [ "$1" = "-help" ] || [ "$1" = "--help" ]
then
	printf "$help"

# if option -w is set, print path to argument
elif [ "$1" = "-w" ] || [ "$2" = "-w" ] 
then
	if [ -z "$2" ]
	then
		[ -d "$notepath" ] && printf "$notepath\n"\
|| printf "Your notes are supposed to be in $notepath but that directory does not exist. Try creating it or try n --help for more information.\n"
	elif [ "$1" = "-w" ]
	then
		[ -e "$notepath$2$suffix" ] && printf "$notepath$2$suffix\n" || printf "No "$2" in "$notepath"\n"
	elif [ "$2" = "-w" ]
	then
		[ -e "$notepath$1$suffix" ] && printf "$notepath$1$suffix\n" || printf "No "$1" in "$notepath"\n"
	fi

# if option -n is set, open $1 in nano
elif [ "$2" = "-n" ]
then
	touch $notepath"$1"$suffix && nano $notepath"$1"$suffix ||\
	printf "You're trying to edit a note in $notepath but that directory doesn't exist. Try creating it or try n --help for more information.\n"

# running with an argument returns a list of notes whose filenames and contents
# contain that argument

else
	{ find -L $notepath -iname "*$1*" | sed "s!$notepath!!" | sed 's!'$suffix'$!!' ;
	grep -E -iRso ".{0,30}$1.{0,30}" $notepath | sed "s!$notepath!!" | \
	sed "s/$suffix:/\ :\ /" ; } | sed '1!G;h;$!d'
fi
